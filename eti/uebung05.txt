ETI - Uebung 5 - David Herrmann

Aufgabe 19:
1)
	KV-Diagramm für f:

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    0    1 |¬x3
	 x2 |  0    1    0    1 |¬x3
	 x2 |  1    0    0    1 | x3
	¬x2 |  0    1    0    1 | x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	Gruppiert:

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    0 |  1 |¬x3
	    |              |    |
	 x2 |  0    1    0 |  1 |¬x3
	    +----+         +----+
	 x2    1 |  0    0 |  1   x3
	    +----+         +----+
	¬x2 |  0    1    0 |  1 | x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	Optimierter boolscher Ausdruck:
	(¬x1 ∧ x0) ∨ (x2 ∧ x3 ∧ ¬x1) ∨
		(¬x2 ∧ x1 ∧ x3 ∧ ¬x0) ∨ (x2 ∧ x1 ∧ ¬x3 ∧ ¬x0)
2)
	Startdiagramm:

	NUM | x3 | x2 | x1 | x0 | OK
	----+----+----+----+----+----
	 m1 |  0 |  0 |  0 |  1 |  +
	----+----+----+----+----+----
	 m2 |  0 |  1 |  0 |  1 |  +
	 m3 |  0 |  1 |  1 |  0 |  -
	 m4 |  1 |  0 |  0 |  1 |  +
	 m5 |  1 |  0 |  1 |  0 |  -
	 m6 |  1 |  1 |  0 |  0 |  +
	----+----+----+----+----+----
	 m7 |  1 |  1 |  0 |  1 |  +

	Kombinationen-1:

	 mx + my | x3 | x2 | x1 | x0 | OK
	---------+----+----+----+----+----
	 m1 + m2 |  0 |  - |  0 |  1 |  +
	 m1 + m4 |  - |  0 |  0 |  1 |  +
	---------+----+----+----+----+----
	 m2 + m7 |  - |  1 |  0 |  1 |  +
	 m4 + m7 |  1 |  - |  0 |  1 |  +
	 m6 + m7 |  1 |  1 |  0 |  - |  -

	Kombinationen-2:

	 mx + my + mz + mw | x3 | x2 | x1 | x0 | OK
	-------------------+----+----+----+----+----
	 m1 + m2 + m4 + m7 |  - |  - |  0 |  1 |
	 m1 + m4 + m2 + m7 |  - |  - |  0 |  1 |

	Primterme:
	 - m3
	 - m5
	 - m6 + m7
	 - m1 + m2 + m4 + m7
	 - m1 + m4 + m2 + m7

	Primtabelle:
	                   | m1 | m2 | m3 | m4 | m5 | m6 | m7
	-------------------+----+----+----+----+----+----+----
	 m3                |            +
	 m5                |                      +
	 m6 + m7           |                           +    +
	 m1 + m2 + m4 + m7 |  +    +         +              +
	-------------------+----------------------------------
	 m1 + m4 + m2 + m7 |  +    +         +              +

	Nur der letzte Term kann gestrichen werden. Es ergibt sich:
	 m3 ∨ m5 ∨ m6 * m7 ∨ m1 * m2 * m4 * m7
	⇒ (¬x0 ∧ x1 ∧ x2 ∧ ¬x3) ∨ (¬x0 ∨ x1 ∨ ¬x2 ∨ x3) ∨
		(¬x1 ∧ x2 ∧ x3) ∨ (x0 ∧ ¬x1)

3)
	Das QM Verfahren ist zu bevorzugen für mehr als 5 Variablen. Ab dann ist
	es schwer bzw. wird es unmöglich 2-dimensionale KV-Diagramme zu
	zeichnen. Mehrdimensionale KV-Diagramme sind dann auch nicht mehr leicht
	handhabbar. Das QM Verfahren lässt sich dann aber trotzdem noch leicht
	anwenden. Außerdem lässt sich das QM Verfahren leichter implementieren,
	da der Algorithmus sehr einfach ist.
	Zusätzlich kann man beim QM Verfahren alle möglichen DNF am Ende leicht
	errechnen.

	Beide Verfahren können zu verschiedenen Lösungen führen, falls mehrere
	minimale DNF möglich sind. Grundsätzlich kann man aber mit beiden
	Verfahren alle möglichen DNF erreichen, man muss sich nur jedes Mal
	entscheiden, welche Form man nimmt.

4)
	Das QM Verfahren lässt sich wahrscheinlich (!) nicht in polynomieller,
	also performanter, Laufzeit implementieren. Alle bekannten Algorithmen
	laufen in exponentieller Laufzeit abhängig von der Anzahl der
	Eingangsvariablen. Da das P = NP Problem noch nicht gelöst ist, lässt
	sich nicht sagen, ob doch ein polynomieller Algorithmus existiert. Dies
	ist aber unwahrscheinlich.
	Die Exponentielle Laufzeit ergibt sich, weil man pro hinzukommende
	Variable möglicherweise eine Tabelle mehr erstellen muss und also alle
	Kombinationen noch einmal finden muss.

Aufgabe 20:
1)
	Aiken / BCD Konvertierungstabelle:
		      Aiken | BCD
		------------+------
		Var-y: 3210 | 3210 :Var-x
		------------+------
		       0000 | 0000
		       0001 | 0001
		       0010 | 0010
		       0011 | 0011
		       0100 | 0100
		       1011 | 0101
		       1100 | 0110
		       1101 | 0111
		       1110 | 1000
		       1111 | 1001
	Es werden 4 Bits für Ein- und Ausgabe benötigt.
	Von BCD nach Aiken in der Tabelle von rechts nach links: x → y

2)
	Aiken y0 = 1 wenn:
		x3 x2 x1 x0
		 0  0  0  1
		 0  0  1  1
		 0  1  0  1
		 0  1  1  1
		 1  0  0  1

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    1    1 |¬x3
	    |                   |
	 x2 |  0    0    1    1 |¬x3
	    |                   |
	 x2 |  0    0    0    0 | x3
	    |                   |
	¬x2 |  0    0    0    1 | x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	 Optimiert:
	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+    +
	¬x2 |  0    0 |  1 |  1 |¬x3
	    |         |      -- |
	 x2 |  0    0 |  1    1 |¬x3
	    |         +---------+
	 x2 |  0    0    0    0 | x3
	    |              +----+
	¬x2 |  0    0    0 |  1 | x3
	    +----+----+----+    +
	    |¬x0 |¬x0 | x0 | x0 |

	y0 = (¬x3 ∧ x0) ∨ (¬x2 ∧ ¬x1 ∧ x0)

	Aiken y1 = 1 wenn
		x3 x2 x1 x0
		 0  0  1  0
		 0  0  1  1
		 0  1  0  1
		 1  0  0  0
		 1  0  0  1

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    1    1    0 |¬x3
	    |                   |
	 x2 |  0    0    0    1 |¬x3
	    |                   |
	 x2 |  0    0    0    0 | x3
	    |                   |
	¬x2 |  1    0    0    1 | x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	Optimiert
	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0 |  1    1 |  0 |¬x3
	    |    +---------+    |
	 x2 |  0    0    0    1 |¬x3
	    |                   |
	 x2 |  0    0    0    0 | x3
	    +----+         +----+
	¬x2    1 |  0    0 |  1   x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	y1 = (¬x2 ∧ ¬x3 ∧ x1) ∨ (¬x2 ∧ x3 ∧ ¬x1) ∨ (¬x3 ∧ ¬x1 ∧ x2 ∧ x0)

	Aiken y2 = 1 wenn:
		x3 x2 x1 x0
		 0  1  0  0
		 0  1  1  0
		 0  1  1  1
		 1  0  0  0
		 1  0  0  1

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    0    0 |¬x3
	    |                   |
	 x2 |  1    1    1    0 |¬x3
	    |                   |
	 x2 |  0    0    0    0 | x3
	    |                   |
	¬x2 |  1    0    0    1 | x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	Optimiert
	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    0    0 |¬x3
	    +----+----+----+    |
	 x2 |  1 ;  1 ;  1 |  0 |¬x3
	    +----+----+----+    |
	 x2 |  0    0    0    0 | x3
	    +----+         +----+
	¬x2    1 |  0    0 |  1   x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	y2 = (x3 ∧ ¬x2 ∧ ¬x1) ∨ (x2 ∧ ¬x3 ∧ x1) ∨ (x2 ∧ ¬x3 ∧ ¬x0)

	Aiken y3 = 1 wenn:
		x3 x2 x1 x0
		 0  1  0  1
		 0  1  1  0
		 0  1  1  1
		 1  0  0  0
		 1  0  0  1

	    |¬x1 | x1 | x1 |¬x1 |
	    +----+----+----+----+
	¬x2 |  0    0    0    0 |¬x3
	    |    +--------------+
	 x2 |  0 |  1 ;  1 ;  1 |¬x3
	    |    +--------------+
	 x2 |  0    0    0    0 | x3
	    +----+         +----+
	¬x2   1  |  0    0 |  1   x3
	    +----+----+----+----+
	    |¬x0 |¬x0 | x0 | x0 |

	y3 = (x3 ∧ ¬x2 ∧ ¬x1) ∨ (¬x3 ∧ x2 ∧ x1) ∨ (¬x3 ∧ x2 ∧ x0)

4)
	Das MCQ Verfahren hätte keinen Vorteil verschafft. Der Grund dafür ist,
	dass das Verfahren das gleiche Problem löst, aber für wenige Variablen
	bereits eine exponentielle Laufzeit hat, während KV-Diagramme vom
	Menschen sehr einfach gelöst werden können, besonders, wenn es sich nur
	um sehr wenige Variablen handelt, wie hier.
	Außerdem wurden hier bereits alle Primterme gefunden. Bei keinem der
	KV-Diagramme sind andere Kombinationen möglich, somit hätte beide
	Verfahren sowieso auf dasselbe Ergebnis geführt.

Aufgabe 21:
	Siehe circuit-3.png

Aufgabe 22:
1)
	a)
		¬(¬a ∨ c ∨ (b ∧ c)) ∨ ¬¬0
		⇒ ¬(¬a ∨ c ∨ (b ∧ c))
		⇒ (a ∧ ¬c ∧ ¬(b ∧ c))
		⇒ (a ∧ ¬c ∧ (¬b ∨ ¬c))

		Diese Form ist logisch und visuell äquivalent zur Schaltung D.

		⇒ (a ∧ ¬c ∧ (¬b ∨ ¬c))
		⇒ (a ∧ ¬c)
		Minimale Form

	b)
		((a ∨ 0) ∧ ¬(b ∧ 0) ∨ ((a ∧ ¬a) ∨ ((a ∨ (c ∧ 0)) ∧ ¬a)))
		⇒ (a ∧ ¬0 ∨ (0 ∨ ((a ∨ 0) ∧ ¬a)))
		⇒ (a ∧ 1 ∨ (0 ∨ (a ∧ ¬a)))
		⇒ (a ∧ 1 ∨ (0 ∨ 0))
		⇒ (a ∧ 1 ∨ 0)
		⇒ a
		Minimale Form

		⇒ (a ∨ 0)
		⇒ (a ∨ (¬b ∧ b))
		⇒ (¬b ∧ a) ∨ (b ∧ a)
		⇒ ¬(b ∨ ¬a) ∨ ¬(¬b ∨ ¬a)

		Diese Form ist logisch und visuell äquivalent zu Schaltung B.

	c)
		¬(¬c ∧ (¬b ∨ a) ∧ (¬c ∨ a))
		⇒ (¬¬c ∨ ¬(¬b ∨ a) ∨ ¬(¬c ∨ a))
		⇒ (c ∨ (b ∧ ¬a) ∨ (c ∧ ¬a))
		⇒ (c ∨ (c ∧ ¬a) ∨ (b ∧ ¬a))
		⇒ (c ∨ (b ∧ ¬a))
		Minimale Form

		(c ∨ (¬a ∧ b))
		(c ∨ (¬a ∧ (a ∨ b)))
		(c ∨ (¬a ∧ ¬(¬a ∧ ¬b)))
		(c ∨ ¬(a ∨ (¬a ∧ ¬b)))
		¬(¬c ∧ (a ∨ (¬a ∧ ¬b)))
		¬(¬c ∧ (a ∨ ¬(a ∨ b)))
		¬(¬c ∧ ¬(¬a ∧ (a ∨ b)))
		¬(¬c ∧ ¬(¬a ∧ ¬(¬a ∧ ¬b)))

		Diese Form ist logisch und visuell äquivalent zu Schaltung A.

	d)
		((a ∧ b) ∧ ¬b) ∨ (c ∧ (¬a ∧ c) ∧ ¬(¬b ∨ a))
		⇒ (a ∧ b ∧ ¬b) ∨ (c ∧ ¬a ∧ c ∧ ¬(¬b ∨ a))
		⇒ 0 ∨ (c ∧ ¬a ∧ c ∧ (b ∧ ¬a))
		⇒ (c ∧ ¬a ∧ c ∧ b ∧ ¬a)
		⇒ (c ∧ ¬a ∧ b)
		Minimale Form

		⇒ (¬a ∧ b ∧ c)
		⇒ (¬a ∧ (b ∧ c))
		⇒ (¬a ∧ (a ∨ (b ∧ c)))
		⇒ ¬(a ∨ ¬(a ∨ (b ∧ c)))
		⇒ ¬(¬¬a ∨ ¬(a ∨ (b ∧ c)))
		⇒ ¬(¬(¬a ∨ ¬a) ∨ ¬(a ∨ ¬(¬b ∨ ¬c)))

		Diese Form ist logisch und visuell äquivalent zu Schaltung C.

2)
	Die minimalen Formen sind bereits in Aufgabenteil 1 berechnet.
